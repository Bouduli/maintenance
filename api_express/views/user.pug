extends template.pug 

block content 
    div(x-data="view()")

        //
            These are links used for tabs
            Sauce for this is https://talltips.novate.co.uk/tabbed-content-using-alpine-js 
        a(href="#" x-on:click.prevent="tab='#houses'") houses 
        a(href="#" x-on:click.prevent="tab='#tasks'") tasks 
        a(href="#" x-on:click.prevent="tab='#contractors'") contractors 

        // This content is tabbed, right?!
        div( x-show='tab=="#houses"' x-data="{houses: []}" x-init = "await fetchHouses() ; console.log('houses: ', houses)"
            @insert-house.camel.window="await fetchHouses();")
            h2 Houses
            div(id="createHouse")
                h3 CREATE HOUSE
                form(action="/house", method="post" @submit.prevent="await createHouse($event.target)")
                    input(type="text", name="address", placeholder="Address", required)
                    input(type="text", name="description" placeholder="Description")
                    input(type="text", name="name", placeholder="Name")
                    input(type="submit" value="create")
            ul
                template(x-for="house in houses")
                    li
                        h3(x-text="'houseID: ' + house.houseID + ' ' + house.address")
                        i(x-text="house.name")
                        p(x-text="house.description")
            
        div(x-show="tab=='#tasks'" x-data= "{tasks : [] }" x-init="await fetchTasks(); console.log('tasks: ', tasks)"
            @insert-task.camel.window="await fetchTasks()")
            h2 Tasks:
            div(id="createTask")
                h3 create task 
                form(action="/task", method="post", @submit.prevent="await createTask($event.target)")
                    input(type="text", name="houseID", placeholder="House ID", required)
                    input(type="text", name="description" placeholder="Description" required)
                    input(type="submit" value="create")
            ul
                template(x-for="task in tasks" :key="task.taskID")
                    li 
                        p description: 
                            span(x-text="task.description")
                        div(x-show="task.completed")
                            h3 COMPLETED!!!

        div(x-show="tab=='#contractors'" x-data="{contractors: []}", x-init="await fetchContractors()"
            @insert-contractors.camel.window="await fetchContractors()")
            h2 Contractors:
            ul
                template(x-for="contractor in contractors")
                    li
                        h3 name: 
                            span(x-text="contractor.name")
                        i occupation: 
                            span(x-text="contractor.occupation")
                        p phone: 
                            span(x-text="contractor.phone")
        script
            include scripts/user.js
            